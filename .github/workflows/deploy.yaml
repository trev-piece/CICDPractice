name: Deploy to K8s

on:
  pull_request:
    types: ['closed']

permissions:
  contents: write

jobs:
  deploy:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest    
    steps:

      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Get commit hash
        id: vars
        run: echo "COMMIT_HASH=$(git rev-parse --short HEAD)" >> $GITHUB_ENV        

      - name: Install python bump2version
        shell: bash
        run: pip install -U bump2version
      
      - name: Set BumpVersion Type
        id: set-bumpversion-type
        run: |
          pat='\[bumpVersion: ((M|m)(ajor|inor)|(P|p)atch)\]'
          s="${{ github.event.pull_request.title }}"
          if [[ $s =~ $pat ]]; then
            echo "BUMPVERSION_TYPE=${BASH_REMATCH[1]} >> $GITHUB_ENV";
          else
            echo "BUMPVERSION_TYPE='patch' >> $GITHUB_ENV";
          fi

      - name: BumpVersion
        id: bumpversion
        run: |
            bump2version $BUMPVERSION_TYPE --current-version $(cat VERSION | sed -e 's/.*://') --allow-dirty
            echo "NEW_VERSION=$(cat VERSION | sed -e 's/.*://')" >> $GITHUB_ENV  

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
    
      - name: Tag and Push Docker image to DockerHub
        run: |
          TAG_NAME="pr-${COMMIT_HASH}"
          docker build -t $IMAGE_NAME:$TAG_NAME .
          docker tag $IMAGE_NAME:$TAG_NAME $IMAGE_NAME:$NEW_VERSION
          docker push $IMAGE_NAME:$NEW_VERSION

      - name: Commit version
        uses: actions-js/push@master
        with:
          message: 'Update app to to $NEW_VERSION'
          force: true
